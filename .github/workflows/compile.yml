on:
  push:
    branches:
      - 'main'

name: compile

jobs:
  build:
    name: Linux Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-musl
          override: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target aarch64-unknown-linux-musl
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target x86_64-unknown-linux-musl
      -
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        run: |
          ls target
          cp target/x86_64-unknown-linux-musl/release/easypwned easypwned
          docker buildx build --platform linux/amd64 -t timglabisch/easypwned:latest_amd64 --push .
          cp target/aarch64-unknown-linux-musl/release/easypwned easypwned
          docker buildx build --platform linux/arm64 -t timglabisch/easypwned:latest_arm64 --push .
          docker manifest create timglabisch/easypwned:latest timglabisch/easypwned:latest_amd64 timglabisch/easypwned:latest_arm64
          docker manifest push timglabisch/easypwned:latest
